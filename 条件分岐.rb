value = gets.to_i

if value > 0
  puts "値は正です。"
elsif value < 0
  puts "値は負です"
else
  puts "値は0です"
end

比較演算子：値同士を比較したい時に使用
  >    A > B：   AはBより大きいか
  >=   A >= B：  AはB以上か
  <    A < B：   AはBより小さいか
  <=   A <= B：  AはB以下か
  ==   A == B：  AとBは等しいか
true/false：式が真か偽りかを扱う真偽値。
論理演算子：式の真偽の確認、真偽値に対しての演算を行う
  ！：not演算子（否定の意味で使用）
  ！＝：値同士が等しくない時にtrue
条件分岐処理：条件を満たしているkどうかで実行内容を分岐する
  【例】if文：trueの場合のみ
    if 条件式
      処理
    end
    ※入れ子構造：何かの中に別のものが入っていること
  else文：if文で偽時の処理を行う
  【例】elseによる条件式が偽の処理
    if 条件式
      # 条件式が真(true)のときに実行する処理
    else
      # 条件式が偽(false)のときに実行する処理
    end
  elseif：false時の処理だが、条件を満たさなかった場合に対してifの条件式を追加する。
  【elsifによる複数の条件分岐】
    if 条件式1
      # 条件式1が真(true)のときに実行する処理
    elsif 条件式2
      # 条件式1が偽(false)のとき、かつ
      # 条件式2が真(true)のときに実行する処理
    else
      # 条件式1と条件式2がどちらとも偽(false)のときに実行する処理
    end

