class Car
  
  def initialize(car_name, car_model, capacity)
    @name = car_name
    @model = car_model
    @capacity = capacity

  def self.run
    puts '走行します'
  end

  def ride_csr(ride_number)
    @ride_number = ride_number
    if ride_numder > @capacity
      puts "#{@name}は、乗車定員が#{@capacity}人なので#{@ride_number}人は乗れません"
    else
      puts "#{@ride_number}人乗車できました"
    end
  end
end


fire_truck = Car.new ('消防車', '大型車', 5)
fire_truck.ride_car(3)




クラス：値の共通のルールを定義することにより、個別のデータを作ることができる。イメージは車の設計図。
  【例】クラスの定義：クラス名は半角英大文字からスタート
    class クラス名
      # 変数やメソッドの定義
    end
    
インスタンス：クラスを元に作られるデータ。設計図（クラス）から作られた車のイメージ
  newメソッド：使用したクラスのインスタンスを生成する。
  例】newメソッド
  # インスタンスを生成し変数で扱う
  変数名 = クラス名.new

インスタンスメソッド：インスタンスが使用できるメソッド。インスタンスごとの個別の情報を使った処理に使用する。
  【例】インスタンスメソッドの定義
    class クラス名
      def メソッド名
        # 処理
      end
    end
  
  【例】インスタンスメソッドの呼び出し
    インスタンス名.メソッド名(引数)
属性：データの性質となる情報....色
属性血：それぞれに当てはまる値...赤

インスタンス変数：データが持つ属性を定義する変数。変数名の前に＠をつける。
  【例】インスタンス変数の定義
    class クラス名
      def メソッド名
        @変数名 = 値  # インスタンス変数
      end
    end
  ※インスタンスが個別に持つ属性値が入り、そのインスタンスの全ての動作に使用できる変数。

クラスメソッド：クラスが使用できるメソッド。クラスで共通の情報を使った処理に使用。
  【例】クラスメソッドの定義
  class クラス名
    def self.メソッド名
      # 処理
    end
  end

  【例】クラスメソッドの呼び出し
  クラス名.メソッド名(引数)

  クラスメソッドとインスタンスメソッドの違い
  概念：  クラス前端で共通した振る舞いを表す。 クラスから生成されたインスタンスの振る舞いを表す。
  使い方：selfを頭につけ、クラスのみに用いる。 何もつけず、新スタンスのみに用いる。

  initializeメソッド：インスタンスが生成された瞬間に、せいせされたインスタンスが実行する処理を定義する。
  【例】initializeメソッドの定義と実行
  class クラス名
    def initialize
      # インスタンス生成したときに実行される処理（以下は例）
      puts "クラス名のインスタンスが生成されました"
    end
  end
  インスタンス = クラス名.new  # initializeメソッドが呼ばれ文字が表示される